apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.1"
}

task jacocoTestReport(type: JacocoReport, dependsOn: ["testDebugUnitTest"]) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.Class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      'android/**/*.*',
                      '**/*_MembersInjector.class',
                      '**/*_MembersInjector*.*',
                      '**/* _*Factory*.*',
                      '**/*Component*.*',
                      '**/*Module*.*'
    ]
    def mainSrc = "${projectDir}/src/main/java"
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug/com/ccorrads/", excludes: fileFilter)

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.projectDir, includes: ['**/*.exec', '**/*.ec'])

    doFirst {
        files('build/intermediates/classes/debug').getFiles().each { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}